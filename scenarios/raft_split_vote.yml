# Raft Split Vote Scenario
# Tests split vote handling and eventual leader election

model: raft
seed: 54321

cluster:
  nodes: [n1, n2, n3, n4, n5]
  tickMs: 1

initial:
  nodeState:
    # All nodes start as followers
    n1: {crashed: false}
    n2: {crashed: false}
    n3: {crashed: false}
    n4: {crashed: false}
    n5: {crashed: false}
  logs:
    # Empty logs initially
    n1: []
    n2: []
    n3: []
    n4: []
    n5: []

network:
  rules:
    # Add some network delays to potentially cause split votes
    - match:
        from: "*"
        to: "*"
        type: "RequestVote"
        bidirectional: false
      action: "delay"
      delaySteps: 2
    - match:
        from: "*"
        to: "*"
        type: "RequestVoteResponse"
        bidirectional: false
      action: "delay"
      delaySteps: 1

timeline:
  - at: 1
    actions:
      - kind: clientwrite
        args:
          command: "SET key1 value1"
  
  - at: 5
    actions:
      - kind: clientwrite
        args:
          command: "SET key2 value2"
  
  - at: 10
    actions:
      - kind: clientwrite
        args:
          command: "SET key3 value3"

assertions:
  - type: leader_exists
    args:
      after: 15
  - type: log_consistency
    args:
      after: 20
  - type: no_split_brain
    args:
      after: 25